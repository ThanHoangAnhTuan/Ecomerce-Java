---
- name: Deploy application using Docker Compose
  hosts: prod
  become: yes  # Sử dụng sudo để thực hiện các task cần quyền root
  vars:
    app_directory: /home/ubuntu/ecommerce
    docker_compose_file: /home/ubuntu/ecommerce/docker-compose.yml
    backend_image: "your-dockerhub-username/backend:latest"
    frontend_image: "your-dockerhub-username/frontend:latest"

  tasks:
    - name: Update and upgrade apt packages
      apt:
        update_cache: yes
        upgrade: dist
        force: yes

    - name: Install required packages for Docker
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
        state: present

    - name: Add Docker's official GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Install Docker
      apt:
        name: docker-ce
        state: present
        update_cache: yes

    - name: Install Docker Compose
      get_url:
        url: https://github.com/docker/compose/releases/download/1.29.2/docker-compose-{{ ansible_system | lower }}-{{ ansible_architecture }}
        dest: /usr/local/bin/docker-compose
        mode: '0755'

    - name: Ensure Docker service is started and enabled
      service:
        name: docker
        state: started
        enabled: yes

    - name: Create application directory
      file:
        path: "{{ app_directory }}"
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: '0755'

    - name: Create frontend and backend directories
      file:
        path: "{{ app_directory }}/{{ item }}"
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: '0755'
      loop:
        - frontend
        - backend

    - name: Copy docker-compose file to EC2
      copy:
        src: files/docker-compose.prod.yml
        dest: "{{ docker_compose_file }}"
        owner: ubuntu
        group: ubuntu
        mode: '0644'

    - name: Copy .env file to frontend
      copy:
        src: files/frontend/.env.prod
        dest: "{{ app_directory }}/frontend/.env"
        owner: ubuntu
        group: ubuntu
        mode: '0600'

    - name: Copy .env file to backend
      copy:
        src: files/backend/.env.prod
        dest: "{{ app_directory }}/backend/.env"
        owner: ubuntu
        group: ubuntu
        mode: '0600'

    - name: Pull latest backend and frontend images
      docker_image:
        name: "{{ item }}"
        source: pull
      loop:
        - "{{ backend_image }}"
        - "{{ frontend_image }}"

    - name: Run Docker Compose to start containers
      docker_compose:
        project_src: "{{ app_directory }}"
        files:
          - "{{ docker_compose_file }}"
        state: present
        restarted: yes
